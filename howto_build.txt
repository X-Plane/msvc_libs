This directory include the libraries required by all x64 build of xptools.
Unlike the OSX/Linux libraries, which always have to be built be any developer
from source with a provided makefile - for windows its a less automated approach:
Some libraries require building with nmake on the command line, other have a 
msvc2017 *.sln ready to compile.

Either build method on windows requires a manual copy of the relevant include 
and output files into the into the respective ./include and ./lib directories. 
For his reason, the precompiled libraries and other files in these two 
directories are included in the git repository, so normally no action is 
required when compiling the XPtools with msvc2017.

### msvc2017 ide builds ###

cd zlib-1.2.11
compile contrib\vstudio\vs17\zlibvc.sln
copy zlib.h zconf.h ..\include\
cd contrib\vstudio\vs17\x64\Release
copy zlibstat.lib zlibstat.pdb $lib\


cd squish-1.11
compile vs17\squish.sln
copy squish.h ..\include\
cd vs17\squish\x64\Release
copy squish.lib squish.pdb $lib\


cd libpng-1.2.41
compile projects\vs17\libpng.sln
copy png.h pngconf.h ..\include\
cd projects/vs17/x64/LIB Release
copy libpng.lib libpng.pdb $lib\

cd expat-2.0.1
compile expat.sln
copy lib\expat.h lib\expat_external.h ..\include\
copy win32\libexpatMT.lib win32\libexpatMT.pdb ..\lib\

cd jpeg-9a
compile jpeg.sln
copy jpeg.lib jpeg.pdb ..\lib\
copy jpeglib.h jconfig.h jmorecfg.h jerror.h ..\include\

cd freetype-2.2.1
compile builds\win32\visualc\freetype.sln
copy include\ft2build.h freetype ..\include\
copy objs\freetype.lib objs\freetype.pdb ..\lib\

### command line builds ####

curl-7.50.0

The native Windows schannel TLS layer will not allow to use disk-based CA certificates, 
required to connect to gatewayapi.x-plane.com - which uses a self signed certificate.
So its a bit convoluted, here are Ben's notes when he did it:

NOTE:
You'll need the Windows SDK installed first or ctype.h won't be found !

You'll also need OpenSSL compiled, which in turn requires cmake, nasm and perl.
1) Open the Visual Studio Command Prompt (Make sure to open one with x64 support!)

2) Navigate to SDK/COMMON/libcurl/curl-7.50.0/winbuild

64bit

3) Run nmake /f Makefile.vc mode=static vc=14 with_devel=c:\C++\X-Plane\design\SDK\COMMON\openssl\win\x64 with_ssl=static enable_sspi=no enable_ipv6=yes enable_idn=yes enable_spnego=no enable_winssl=no debug=no machine=x64 RTLIBCFG=static


The outputs will be called libcurl_a.lib located in the curl-7.50.0/builds/libcurl-vc10-x64-release-static-ssl-static-obj-lib 
and curl-7.50.0/builds/libcurl-vc10-x86-release-static-ssl-static-obj-lib folders. 
### end of curl notes ###

cd tiff-4.0.3
nmake /f Makefile.vc lib
cd libtiff
copy libtiff.lib libtiff.pdb ..\lib\
copy tiff.h tiffconf.h tiffio.h tiffio.hxx tiffvers. ..\include\

cd proj-4.7.0
nmake /f makefile.vc
copy src\proj.lib ..\lib\
copy src\proj_api.h ..\include\

cd libgeotiff-1.4.2 
make /f makefile.vc install